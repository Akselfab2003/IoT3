
services:
  controller:
    image: apache/kafka:latest
    container_name: controller
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0



  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:19092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller
  
  script:
    image: python:3.9
    container_name: script
    volumes:
      - C:/DEV/IoT3/Services:/app
    working_dir: /app
    command: ["sh", "-c", "pip install -r requirements.txt && python script.py"]    
    depends_on:
      - broker


  MsgSender:
    image: python:3.9
    container_name: Msg
    volumes:
      - C:/DEV/IoT3/Services:/app
    working_dir: /app
    command: ["sh", "-c", "pip install -r requirements.txt && python MsgSender.py"]    
    depends_on:
      - broker
      - script